name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      # - name: Test
      #   id: npm-ci-test
      #   run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        types:
          - 'raw qcow2'
          - 'iso'

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Get Runner Information
        id: runner-info
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)

          # Concatenate the types with a hyphen
          TYPES=$(echo "${{ matrix.types }}" | tr ' ' '-')

          {
            echo "USER_UID=${USER_UID}"
            echo "USER_GID=${USER_GID}"
            echo "TYPES=${TYPES}"
          } >> "$GITHUB_OUTPUT"

      - name: Test Action
        id: action
        uses: ./
        with:
          config-file: ./__fixtures__/config.toml
          image: ghcr.io/centos-workstation/achillobator:latest
          chown:
            ${{ steps.runner-info.outputs.USER_UID }}:${{
            steps.runner-info.outputs.USER_GID }}
          types: ${{ matrix.types }}

      - name: List Outputs
        env:
          OUTPUT_PATHS_JSON: ${{ steps.action.outputs.output-paths }}
        run: |
          echo "Output Directory: ${{ steps.action.outputs.output-directory }}"
          echo "Manifest Path: ${{ steps.action.outputs.manifest-path }}"
          echo "Output Paths: $OUTPUT_PATHS_JSON"

          file ${{ steps.action.outputs.manifest-path }}

          # For each key in the JSON map, output the type (key) and path
          for OUTPUT in $(echo "$OUTPUT_PATHS_JSON" | jq -r 'keys[]'); do
            OUTPUT_TYPE=$(echo "$OUTPUT_PATHS_JSON" | jq -r ".$OUTPUT.type")
            OUTPUT_PATH=$(echo "$OUTPUT_PATHS_JSON" | jq -r ".$OUTPUT.path")

            echo "Output Type: $OUTPUT_TYPE"
            file "$OUTPUT_PATH"
          done

      - name: Upload Outputs
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ steps.runner-info.outputs.TYPES }}
          path: ${{ steps.action.outputs.output-directory }}
          if-no-files-found: error
